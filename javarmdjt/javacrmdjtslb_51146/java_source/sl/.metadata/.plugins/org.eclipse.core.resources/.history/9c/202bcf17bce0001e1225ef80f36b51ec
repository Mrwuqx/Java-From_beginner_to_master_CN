package com.lzw;

import java.awt.*;
import java.net.*;
import javax.swing.*;

public class ImageZoom extends JFrame {
	Image img;
	……// 省略部分成员变量
	public ImageZoom() {
		initialize(); // 调用初始化方法
	}
	// 界面初始化方法
	private void initialize() {
		URL imgUrl = ImageZoom.class.getResource("img.jpg"); // 获取图片资源的路径
		img = Toolkit.getDefaultToolkit().getImage(imgUrl); // 获取图片资源
		canvas = new MyCanvas();
		this.setBounds(100, 100, 800, 600); // 设置窗体大小和位置
		this.setContentPane(getContentPanel()); // 设置内容面板
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // 设置窗体关闭模式
		this.setTitle("绘制图片"); // 设置窗体标题
	}
	……// 省略布局方法的代码
	// 获取滑块组件
	private JSlider getJSlider() {
		if (jSlider == null) {
			jSlider = new JSlider(); // 创建滑块组件
			jSlider.setMaximum(1000); // 设置滑块最大取值
			jSlider.setValue(100); // 设置滑块最小取值
			jSlider.setMinimum(1); // 设置滑块当前值
			// 添加滑块改变事件
			jSlider.addChangeListener(new javax.swing.event.ChangeListener() {
				public void stateChanged(
						javax.swing.event.ChangeEvent e) {
					canvas.repaint(); // 重新绘制画板内容
				}
			});
		}
		return jSlider;
	}
	// 主方法
	public static void main(String[] args) {
		new ImageZoom().setVisible(true);
	}
	// 画板类
	class MyCanvas extends Canvas {
		public void paint(Graphics g) {
			int newW = 0, newH = 0;
			imgWidth = img.getWidth(this); // 获取图片宽度
			imgHeight = img.getHeight(this); // 获取图片高度
			float value = jSlider.getValue(); // 滑块组件的取值
			newW = (int) (imgWidth * value / 100); // 计算图片放大后的宽度
			newH = (int) (imgHeight * value / 100); // 计算图片放大后的高度
			g.drawImage(img, 0, 0, newW, newH, this); // 绘制指定大小的图片
		}
	}
}
